jfjklkklf
jffjjfklfklfk
kfjfvkjorjdfk
kfjffijfoflkfmfd
lkfkldfdkfflfl;f;l
10Chapter 11.  DictionariesCheck summaries and types:Instead of printing and checking the entire dataset, considerprinting summaries of the data: for example, the number of items in a dictionary orthe total of a list of numbers.A common cause of runtime errors is a value that is not the right type. For debuggingthis kind of error, it is often enough to print the type of a value.Write self-checks:Sometimes you can write code to check for errors automatically.  Forexample, if you are computing the average of a list of numbers, you could check thatthe result is not greater than the largest element in the list or less than the smallest.This is called a “sanity check” because it detects results that are “insane.”Another kind of check compares the results of two different computations to see ifthey are consistent. This is called a “consistency check.”Pretty print the output:Formatting debugging output can make it easier to spot an error.We saw an example in Section 6.9.  Thepprintmodule provides apprintfunctionthat displays built-in types in a more human-readable format.Again, time you spend building scaffolding can reduce the time you spend debugging.11.9    Glossarydictionary:A mapping from a set of keys to their corresponding values.key-value pair:The representation of the mapping from a key to a value.item:Another name for a key-value pair.key:An object that appears in a dictionary as the first part of a key-value pair.value:An object that appears in a dictionary as the second part of a key-value pair. This ismore specific than our previous use of the word “value.”implementation:A way of performing a computation.hashtable:The algorithm used to implement Python dictionaries.hash function:A function used by a hashtable to compute the location for a key.hashable:A type that has a hash function. Immutable types like integers, floats and stringsare hashable; mutable types like lists and dictionaries are not.lookup:A dictionary operation that takes a key and finds the corresponding value.reverse lookup:A dictionary operation that takes a value and finds one or more keys thatmap to it.singleton:A list (or other sequence) with a single element.call graph:A diagram that shows every frame created during the execution of a program,with an arrow from each caller to each callee.histogram:A set of counters.memo:A computed value stored to avoid unnecessary future computation.
11.10.  Exercises111global variable:A variable defined outside a function.  Global variables can be accessedfrom any function.flag:A boolean variable used to indicate whether a condition is true.declaration:A statement likeglobalthat tells the interpreter something about a variable.11.10    ExercisesExercise 11.9.If you did Exercise 10.8, you already have a function namedhas_duplicatesthattakes a list as a parameter and returnsTrueif there is any object that appears more than once in thelist.Use  a  dictionary  to  write  a  faster,  simpler  version  ofhas_duplicates.   Solution:http:    //thinkpython.    com/    code/    has_    duplicates.    py.Exercise 11.10.Two words are “rotate pairs” if you can rotate one of them and get the other (seerotate_wordin Exercise 8.12).Write  a  program  that  reads  a  wordlist  and  finds  all  the  rotate  pairs.Solution:http:    //thinkpython.    com/    code/    rotate_    pairs.    py.Exercise 11.11.Here’s another Puzzler fromCar Talk(http:    //    www.    cartalk.    com/    content/puzzlers):This was sent in by a fellow named Dan O’Leary. He came upon a common one-syllable,five-letter word recently that has the following unique property. When you remove thefirst letter, the remaining letters form a homophone of the original word, that is a wordthat sounds exactly the same.  Replace the first letter, that is, put it back and removethe second letter and the result is yet another homophone of the original word. And thequestion is, what’s the word?Now I’m going to give you an example that doesn’t work.  Let’s look at the five-letterword, ‘wrack.’  W-R-A-C-K, you know like to ‘wrack with pain.’  If I remove the firstletter, I am left with a four-letter word, ’R-A-C-K.’ As in, ‘Holy cow, did you see therack on that buck!  It must have been a nine-pointer!’  It’s a perfect homophone.  If youput the ‘w’ back, and remove the ‘r,’ instead, you’re left with the word, ‘wack,’ which isa real word, it’s just not a homophone of the other two words.But there is, however, at least one word that Dan and we know of, which will yield twohomophones if you remove either of the first two letters to make two, new four-letterwords. The question is, what’s the word?You can use the dictionary from Exercise 11.1 to check whether a string is in the word list.To  check  whether  two  words  are  homophones,  you  can  use  the  CMU  Pronouncing  Dictionary.You  can  download  it  fromhttp:    //    www.    speech.    cs.    cmu.    edu/    cgi- bin/    cmudictor  fromhttp:    //    thinkpython.    com/    code/    c06dand you can also downloadhttp:    //    thinkpython.com/    code/    pronounce.    py, which provides a function namedread_dictionarythat reads thepronouncing dictionary and returns a Python dictionary that maps from each word to a string thatdescribes its primary pronunciation.Write a program that lists all the words that solve the Puzzler. Solution:http:    //    thinkpython.com/    code/    homophone.    py.
112Chapter 11.  Dictionaries
Chapter 12Tuples12.1    Tuples are immutableA  tuple  is  a  sequence  of  values.   The  values  can  be  any  type,  and  they  are  indexed  byintegers, so in that respect tuples are a lot like lists. The important difference is that tuplesare immutable.Syntactically, a tuple is a comma-separated list of values:>>>            t            ='a','b','c','d','e'Although it is not necessary, it is common to enclose tuples in parentheses:>>>            t            =            ('a','b','c','d','e')To create a tuple with a single element, you have to include a final comma:>>>            t1            ='a',>>>            type(t1)<type'tuple'>A value in parentheses is not a tuple:>>>            t2            =            ('a')>>>            type(t2)<type'str'>Another way to create a tuple is the built-in functiontuple.  With no argument, it createsan empty tuple:>>>            t            =            tuple()>>>            print            t()If the argument is a sequence (string, list or tuple), the result is a tuple with the elements ofthe sequence:>>>            t            =            tuple('lupins')>>>            print            t('l','u','p','i','n','s')Becausetupleis the name of a built-in function, you should avoid using it as a variablename.Most list operators also work on tuples. The bracket operator indexes an element:

